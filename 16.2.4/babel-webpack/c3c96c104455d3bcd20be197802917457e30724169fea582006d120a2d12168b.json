{"ast":null,"code":"import { API_PATH } from 'src/environments/environment';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PokemonService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getPokemonList(offset, limit = 20) {\n    return this.httpClient.get(`${API_PATH}` + 'pokemon?offset=' + offset + '&limit=' + limit).pipe(map(x => x.results));\n  }\n  getPokemonDetail(pokemon) {\n    return this.httpClient.get(`${API_PATH}pokemon/${pokemon}`);\n  }\n  getPokemonSpecies(name) {\n    const url = `${this.baseUrl}pokemon-species/${name}`;\n    return this.httpClient.get(`${API_PATH}pokemon/${pokemon}`);\n  }\n  static #_ = this.ɵfac = function PokemonService_Factory(t) {\n    return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PokemonService,\n    factory: PokemonService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["API_PATH","map","PokemonService","constructor","httpClient","getPokemonList","offset","limit","get","pipe","x","results","getPokemonDetail","pokemon","getPokemonSpecies","name","url","baseUrl","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/brunolafayette/Documents/GitHub/Pokedex_Angular/pokedex/src/app/service/PokemonService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { API_PATH } from 'src/environments/environment';\nimport { PokemonList } from './models/pokemon.list';\nimport { PokemonDetail } from './models/pokemon.detail';\nimport { Observable, map } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PokemonService {\n  bottomSheet: any;\n  classicMode: any;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getPokemonList(offset: number, limit: number = 20): Observable<PokemonList[]> {\n    return this.httpClient.get<PokemonList[]>(`${API_PATH}` + 'pokemon?offset=' + offset + '&limit=' + limit)\n      .pipe(\n        map((x: any) => x.results)\n      );\n  }\n\n  getPokemonDetail(pokemon: number | string): Observable<PokemonDetail> {\n    return this.httpClient.get<PokemonDetail>(`${API_PATH}pokemon/${pokemon}`);\n  }\n\n  getPokemonSpecies(name: string): Observable<any> {\n    const url = `${this.baseUrl}pokemon-species/${name}`;\n    return this.httpClient.get<PokemonDetail>(`${API_PATH}pokemon/${pokemon}`);\n  }\n\n}\n"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,8BAA8B;AAGvD,SAAqBC,GAAG,QAAQ,MAAM;;;AAOtC,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE9CC,cAAcA,CAACC,MAAc,EAAEC,KAAA,GAAgB,EAAE;IAC/C,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAgB,GAAGR,QAAQ,EAAE,GAAG,iBAAiB,GAAGM,MAAM,GAAG,SAAS,GAAGC,KAAK,CAAC,CACtGE,IAAI,CACHR,GAAG,CAAES,CAAM,IAAKA,CAAC,CAACC,OAAO,CAAC,CAC3B;EACL;EAEAC,gBAAgBA,CAACC,OAAwB;IACvC,OAAO,IAAI,CAACT,UAAU,CAACI,GAAG,CAAgB,GAAGR,QAAQ,WAAWa,OAAO,EAAE,CAAC;EAC5E;EAEAC,iBAAiBA,CAACC,IAAY;IAC5B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,mBAAmBF,IAAI,EAAE;IACpD,OAAO,IAAI,CAACX,UAAU,CAACI,GAAG,CAAgB,GAAGR,QAAQ,WAAWa,OAAO,EAAE,CAAC;EAC5E;EAAC,QAAAK,CAAA,G;qBApBUhB,cAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdrB,cAAc;IAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}